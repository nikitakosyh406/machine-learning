import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# 1. Загрузка данных
df = pd.read_csv("SAP-4000.csv", names=[
    "Пол", "Часы_учёбы_в_неделю", "Репетиторство", "Регион",
    "Посещаемость", "Образование_родителей", "Балл_за_экзамен"
])

# Преобразование числовых признаков
for col in ["Часы_учёбы_в_неделю", "Посещаемость", "Балл_за_экзамен"]:
    df[col] = pd.to_numeric(df[col], errors='coerce')

df.dropna(inplace=True)

# 2. Проверка структуры данных
print(df.head())
print(df.info())

# 3. Визуализация численных признаков

## 3.1 Гистограммы численных признаков
numeric_cols = ['Часы_учёбы_в_неделю', 'Посещаемость', 'Балл_за_экзамен']
plt.figure(figsize=(15, 10))
for i, col in enumerate(numeric_cols):
    plt.subplot(2, 2, i + 1)
    sns.histplot(df[col], kde=True, bins=20)
    plt.title(f'Распределение {col}')
plt.tight_layout()
plt.show()

# Пояснение
print("\n### Гистограммы численных признаков:")
print("- Гистограммы показывают распределение значений для каждого численного признака.")
print("- Например, распределение `Часы_учёбы_в_неделю` имеет нормальное распределение, а `Балл_за_экзамен` имеет небольшой разброс.")

## 3.2 Корреляционная матрица
numeric_df = df.select_dtypes(include=[np.number])
corr = numeric_df.corr()
plt.figure(figsize=(10, 8))
sns.heatmap(corr, annot=True, cmap='coolwarm')
plt.title('Корреляция численных признаков')
plt.show()

# Пояснение
print("\n### Корреляционная матрица:")
print("- Высокая положительная корреляция между `Часы_учёбы_в_неделю` и `Балл_за_экзамен` указывает на то, что больше времени, потраченного на учёбу, связано с более высокими баллами.")
print("- Также заметна корреляция между `Посещаемостью` и `Баллом_за_экзамен`.")

## 3.3 Pairplot для численных признаков
sns.pairplot(numeric_df)
plt.show()

# Пояснение
print("\n### Pairplot численных признаков:")
print("- Pairplot показывает взаимосвязь между всеми парами численных признаков.")
print("- Например, можно видеть, что студенты с высокой посещаемостью чаще получают высокие баллы за экзамен.")

# 4. Визуализация категориальных признаков

cat_cols = ['Пол', 'Репетиторство', 'Регион', 'Образование_родителей']

## 4.1 Boxplot для влияния категориальных признаков на Балл_за_экзамен
plt.figure(figsize=(15, 10))
for i, col in enumerate(cat_cols):
    plt.subplot(2, 2, i + 1)
    sns.boxplot(x=col, y='Балл_за_экзамен', data=df)
    plt.title(f'Влияние {col} на результат экзамена')
    plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Пояснение
print("\n### Boxplot категориальных признаков:")
print("- По Boxplot видно, что наличие репетитора (`Репетиторство`) положительно влияет на результаты экзамена.")
print("- Студенты из городских регионов (`Регион`) имеют более высокие баллы в среднем, чем из сельских районов.")

## 4.2 Countplot для распределения категориальных признаков
plt.figure(figsize=(15, 10))
for i, col in enumerate(cat_cols):
    plt.subplot(2, 2, i + 1)
    sns.countplot(x=col, data=df)
    plt.title(f'Распределение {col}')
    plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Пояснение
print("\n### Countplot категориальных признаков:")
print("- Большинство студентов являются из городских регионов (`Регион`).")
print("- У большинства студентов родители имеют вторичное образование (`Образование_родителей`).")

# 5. Графики зависимости от целевой переменной

## 5.1 Scatterplot для численных признаков
plt.figure(figsize=(15, 10))
for i, col in enumerate(numeric_cols[:-1]):
    plt.subplot(2, 2, i + 1)
    sns.scatterplot(x=col, y='Балл_за_экзамен', data=df)
    plt.title(f'Зависимость Балл_за_экзамен от {col}')
plt.tight_layout()
plt.show()

# Пояснение
print("\n### Scatterplot зависимости от целевой переменной:")
print("- На графике зависимости `Часы_учёбы_в_неделю` от `Балла_за_экзамен` видна положительная линейная зависимость.")
print("- Чем больше часов студент тратит на учёбу, тем выше его результаты на экзамене.")

## 5.2 Heatmap корреляции с баллом за экзамен
plt.figure(figsize=(10, 8))
sns.heatmap(corr[['Балл_за_экзамен']], annot=True, cmap='coolwarm')
plt.title('Взаимосвязь признаков с Балл_за_экзамен')
plt.show()

# Пояснение
print("\n### Heatmap корреляции с Баллом_за_экзамен:")
print("- Наиболее сильная корреляция наблюдается между `Часы_учёбы_в_неделю` и `Баллом_за_экзамен`.")
print("- Это подтверждает важность времени, затрачиваемого на учёбу, для успешной подготовки к экзаменам.")

# 6. Общий вывод

print("\n\n### Общий вывод:")
print("- **Часы_учёбы_в_неделю** и **Посещаемость** оказывают наибольшее влияние на результаты экзамена.")
print("- Студенты, которые получают репетиторство (`Репетиторство`), имеют более высокие баллы.")
print("- Городские студенты (`Регион`) в среднем показывают лучшие результаты, возможно, из-за доступа к лучшим ресурсам.")
print("- Уровень образования родителей (`Образование_родителей`) также играет роль: студенты с более образованными родителями чаще получают высокие баллы.")
print("- Для повышения успеваемости рекомендуется увеличить количество часов учебы, повысить посещаемость занятий и обеспечить доступ к дополнительным ресурсам (например, репетиторству).")